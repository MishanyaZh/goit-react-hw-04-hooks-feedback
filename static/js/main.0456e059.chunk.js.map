{"version":3,"sources":["FeedbackOptions/FeedbackOptions.styled.jsx","FeedbackOptions/FeedbackOptions.jsx","Notification/Notification.styled.jsx","Notification/Notification.jsx","Statistics/Statistics.styled.jsx","Statistics/Statistics.jsx","Section/Section.styled.jsx","Section/Section.jsx","App/App.styled.jsx","App/App.jsx","index.js"],"names":["List","styled","ul","Button","button","FeedbackOptions","onLeaveFeedback","options","map","option","type","onClick","NotificationMessage","p","Notification","message","Container","div","props","eventType","Statistics","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Box","Title","h2","Section","title","children","MainContainer","App","state","leaveFeedback","setState","prevState","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEaA,EAAOC,IAAOC,GAAV,8HAQJC,EAASF,IAAOG,OAAV,ua,OCSJC,I,MAAAA,EAhBf,YAAwD,IAA7BC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,QAC1C,OACE,8BACE,cAACP,EAAD,UACGO,EAAQC,KAAI,SAAAC,GAAM,OACjB,6BACE,cAACN,EAAD,CAAQO,KAAK,SAASC,QAAS,kBAAML,EAAgBG,IAArD,SACGA,KAFIA,WCNNG,EAAsBX,IAAOY,EAAV,oECKjBC,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,cAACH,EAAD,UAAsBG,KCFXC,EAAYf,IAAOgB,IAAV,0NAIN,SAAAC,GAAK,OACjBA,EAAMC,WAAa,KACf,yBACA,4BAOKnB,EAAOC,IAAOC,GAAV,kMCqBFkB,I,MAAAA,EAjCf,SAAoBF,GAClB,IACEG,EAKEH,EALFG,KACAC,EAIEJ,EAJFI,QACAC,EAGEL,EAHFK,IACAC,EAEEN,EAFFM,mBACAC,EACEP,EADFO,gCAEF,OACE,eAACT,EAAD,CAAWG,UAAWM,EAAtB,WACID,GAAsB,cAAC,EAAD,CAAcT,QAAQ,sBAE7CS,EAAqB,GACpB,eAAC,EAAD,WACE,6BACE,0CAAaH,OAEf,6BACE,6CAAgBC,OAElB,6BACE,yCAAYC,OAEd,6BACE,2CAAcC,OAEhB,qDAAwBC,EAAxB,cC5BGC,EAAMzB,IAAOgB,IAAV,wJAOHU,EAAQ1B,IAAO2B,GAAV,mDCCHC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACL,EAAD,WACE,cAACC,EAAD,UAAQG,IACPC,MCJQC,EAAgB/B,IAAOgB,IAAV,uQCIpBgB,E,4MACJC,MAAQ,CACNb,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPY,cAAgB,SAAA1B,GACd,EAAK2B,UAAS,SAAAC,GAAS,sBAAQ5B,EAAS4B,EAAU5B,GAAU,O,EAG9De,mBAAqB,WACnB,OAAO,EAAKU,MAAMX,IAAM,EAAKW,MAAMb,KAAO,EAAKa,MAAMZ,S,EAGvDG,gCAAkC,WAChC,OAAOa,KAAKC,MAAO,EAAKL,MAAMb,KAAO,EAAKG,qBAAwB,M,4CAGpE,WACE,MAA+BgB,KAAKN,MAA5Bb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBhB,EAAUkC,OAAOC,KAAKF,KAAKN,OACjC,OACE,eAACF,EAAD,WACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACExB,gBAAiBkC,KAAKL,cACtB5B,QAASA,MAIb,cAAC,EAAD,CAASuB,MAAM,aAAf,SACE,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoBgB,KAAKhB,qBACzBC,gCAAiCe,KAAKf,6C,GArChCkB,aA6CHV,IC9CfW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0456e059.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-evenly;\n  text-align: center;\n\n  list-style: none;\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 40px;\n  font-size: 12px;\n  font-weight: 600;\n  text-transform: uppercase;\n  border-radius: 5px;\n  transition-duration: 0.1s;\n  box-shadow: inset 1px 1px 11px 1px #797a7c;\n  cursor: pointer;\n\n  &:active {\n    transform: scale(1.1);\n    background: #aafcea;\n    color: #062afa;\n    box-shadow: 1px 1px 11px 1px #062afa;\n    transition-duration: 0.1s;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { List, Button } from './FeedbackOptions.styled';\n\nfunction FeedbackOptions({ onLeaveFeedback, options }) {\n  return (\n    <div>\n      <List>\n        {options.map(option => (\n          <li key={option}>\n            <Button type=\"button\" onClick={() => onLeaveFeedback(option)}>\n              {option}\n            </Button>\n          </li>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  option: PropTypes.arrayOf(\n    PropTypes.exact({\n      Good: PropTypes.string.isRequired,\n      Neutral: PropTypes.string.isRequired,\n      Bad: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const NotificationMessage = styled.p`\n  text-align: center;\n  color: brown;\n`;\n","import PropTypes from 'prop-types';\nimport { NotificationMessage } from './Notification.styled.jsx';\n\nconst Notification = ({ message }) => (\n  <NotificationMessage>{message}</NotificationMessage>\n);\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  border-radius: 5px;\n  background: ${props =>\n    props.eventType >= '50'\n      ? 'rgb(157 255 157 / 53%)'\n      : 'rgb(240 140 122 / 54%)'};\n  box-shadow: 1px 1px 11px 1px #797a7c;\n  &:hover {\n    box-shadow: 1px 1px 11px 1px #062afa;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  transition-duration: 1s;\n  &:hover {\n    transform: scale(1.3);\n    transition: 0.5s;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport Notification from '../Notification/Notification';\nimport { Container, List } from './Statistics.styled';\n\nfunction Statistics(props) {\n  const {\n    good,\n    neutral,\n    bad,\n    countTotalFeedback,\n    countPositiveFeedbackPercentage,\n  } = props;\n  return (\n    <Container eventType={countPositiveFeedbackPercentage}>\n      {!countTotalFeedback && <Notification message=\"No feedback given\" />}\n\n      {countTotalFeedback > 0 && (\n        <List>\n          <li>\n            <span>Good: {good}</span>\n          </li>\n          <li>\n            <span>Neutral: {neutral}</span>\n          </li>\n          <li>\n            <span>Bad: {bad}</span>\n          </li>\n          <li>\n            <span>Total: {countTotalFeedback}</span>\n          </li>\n          <li>Positive feedback: {countPositiveFeedbackPercentage}%</li>\n        </List>\n      )}\n    </Container>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotalFeedback: PropTypes.number.isRequired,\n  countPositiveFeedbackPercentage: PropTypes.number.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  border: 2px solid black;\n  border-radius: 10px;\n  box-shadow: inset 4px 3px 9px 3px #797a7c;\n  background: burlywood;\n`;\n\nexport const Title = styled.h2`\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Box, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => (\n  <Box>\n    <Title>{title}</Title>\n    {children}\n  </Box>\n);\n\nexport default Section;\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  max-width: 360px;\n  min-width: 310px;\n\n  margin: 0 auto;\n  margin-top: 5px;\n  padding: 20px;\n\n  border: 1px solid crimson;\n  border-radius: 10px;\n\n  background: rgb(224, 210, 210);\n  box-shadow: 1px 1px 11px 1px #062afa;\n`;\n","import { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions.jsx';\nimport Statistics from '../Statistics/Statistics.jsx';\nimport Section from '../Section/Section.jsx';\nimport { MainContainer } from './App.styled.jsx';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  leaveFeedback = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.bad + this.state.good + this.state.neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const options = Object.keys(this.state);\n    return (\n      <MainContainer>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onLeaveFeedback={this.leaveFeedback}\n            options={options}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotalFeedback={this.countTotalFeedback()}\n            countPositiveFeedbackPercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </MainContainer>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}